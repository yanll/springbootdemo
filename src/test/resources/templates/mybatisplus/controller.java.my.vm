package ${package.Controller};

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.*;
import tk.techforge.springdemo.modules.index.bean.ResponseMsg;
import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};

import java.io.Serializable;

#set($serviceInstanceName=$table.serviceName.substring(0,1).toLowerCase()+$table.serviceName.substring(1));
#set($entityInstance=$entity.substring(0,1).toLowerCase()+$entity.substring(1));

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
@Slf4j
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
    #if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
    #else
public class ${table.controllerName} {
    #end

    @Autowired
    private ${table.serviceName} ${serviceInstanceName};

    @PostMapping("/add")
    public ResponseMsg add(@RequestBody ${entity} ${entityInstance}) {
        boolean result = ${serviceInstanceName}.save(${entityInstance});
        return new ResponseMsg(HttpStatus.OK, "添加成功！", result);
    }

    @PutMapping("/update")
    public ResponseMsg modify(@RequestBody ${entity} ${entityInstance}) {
        boolean result = ${serviceInstanceName}.save(${entityInstance});
        return new ResponseMsg(HttpStatus.OK, "更新成功！", result);
    }

    @DeleteMapping("/delete/{id}")
    public ResponseMsg delete(@PathVariable("id") Serializable id) {
        boolean result = ${serviceInstanceName}.removeById(id);
        return new ResponseMsg(HttpStatus.OK, "删除成功！", result);
    }

    @GetMapping("/get")
    public ResponseMsg get(@PathVariable("id") Serializable id) {
        ${entity} ${entityInstance} = ${serviceInstanceName}.getById(id);
        return new ResponseMsg(HttpStatus.OK, ${entityInstance});
    }

    @GetMapping("/page")
    public ResponseMsg page(String id) {
        return null;
    }

}

#end